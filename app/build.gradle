apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.alibaba.arouter'

android {
    compileSdkVersion build_versions.compile_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        applicationId "com.coding.zxm.wanandroid"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        //room schema
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    signingConfigs {
        def filePath = '../sign/keystore.jks'
        def pwd = '20190101'
        def alias = 'com.coding.zxm'

        release {
            storeFile file(filePath)
            storePassword pwd
            keyAlias alias
            keyPassword pwd
        }
        debug {
            keyAlias alias
            keyPassword pwd
            storeFile file(filePath)
            storePassword pwd
        }
    }

    buildTypes {
        release {
            //混淆
            minifyEnabled true
            //压缩优化
            zipAlignEnabled true
            //资源压缩
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //当前模式
            buildConfigField 'boolean', 'IS_DEBUG', 'false'

            signingConfig signingConfigs.release
        }

        debug {
            //当前模式
            buildConfigField 'boolean', 'IS_DEBUG', 'false'

            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "WanAndroid_${variant.versionName}_${variant.buildType.name}.apk"
        }
    }

}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    //Kotlin
    implementation deps.kotlin.stdlib
    implementation deps.core_ktx

//    implementation deps.activity.activity_ktx

    //androidx
    implementation deps.app_compat
    implementation deps.material
    implementation deps.constraint_layout
    implementation deps.recyclerview
    implementation deps.rvadapterhelper

    //multidex
    implementation deps.multidex

    // Navigation
    implementation deps.navigation.runtime_ktx
    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.ui_ktx

    // Architecture components
    //lifecycle
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.viewmodel_ktx
    implementation deps.lifecycle.extensions

//    implementation deps.lifecycle.livedata_ktx
    annotationProcessor deps.lifecycle.compiler

    //room
    implementation deps.room.runtime
    annotationProcessor deps.room.compiler

    //arouter
    implementation deps.arouter.api
    kapt deps.arouter.compiler

    //banner
    implementation deps.banner

    //Marquee
    implementation 'com.sunfusheng:MarqueeView:1.4.1'

    //smart refresh
    implementation deps.smart_layout
    implementation deps.smart_header_classics
    implementation deps.smart_footer_classics

    //flexbox
    implementation deps.flexbox

    //fastjson
    implementation deps.fastjson

    //CircleImageView
    implementation deps.circleImageView
    //图片缩放
    implementation deps.scale_image_view
    //lottie
//    implementation deps.lottie

    //umeng
    implementation deps.umsdk_common
    implementation deps.umsdk_asms
    implementation deps.umsdk_crash

    //Tinker
//    implementation deps.tinker_android_lib

    implementation 'com.tencent.bugly:crashreport_upgrade:1.4.5'
    //1. 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    //2.为了便于解答问题，这里的tinker版本建议跟随此处demo设置，如果微信更新了tinker版本，bugly会定期同步更新
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.14.3'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.471'

    //lib
    implementation project(path: ':lib:core')
    implementation project(path: ':lib:network')
    implementation project(path: ':lib:util')
    implementation project(path: ':lib:webview')
    implementation project(path: ':lib:image')
    api project(path: ':lib:weather')

    implementation project(path: ':lib:map')
}

//apply from: 'tinker-support.gradle'